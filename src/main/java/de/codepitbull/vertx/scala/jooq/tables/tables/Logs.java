/*
 * This file is generated by jOOQ.
*/
package de.codepitbull.vertx.scala.jooq.tables.tables;


import de.codepitbull.vertx.scala.jooq.tables.VertxTest;
import de.codepitbull.vertx.scala.jooq.tables.tables.records.LogsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Logs extends TableImpl<LogsRecord> {

    private static final long serialVersionUID = -1681661405;

    /**
     * The reference instance of <code>vertx_test.logs</code>
     */
    public static final Logs LOGS = new Logs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LogsRecord> getRecordType() {
        return LogsRecord.class;
    }

    /**
     * The column <code>vertx_test.logs.id</code>.
     */
    public final TableField<LogsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>vertx_test.logs.log</code>.
     */
    public final TableField<LogsRecord, String> LOG = createField("log", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>vertx_test.logs</code> table reference
     */
    public Logs() {
        this(DSL.name("logs"), null);
    }

    /**
     * Create an aliased <code>vertx_test.logs</code> table reference
     */
    public Logs(String alias) {
        this(DSL.name(alias), LOGS);
    }

    /**
     * Create an aliased <code>vertx_test.logs</code> table reference
     */
    public Logs(Name alias) {
        this(alias, LOGS);
    }

    private Logs(Name alias, Table<LogsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Logs(Name alias, Table<LogsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VertxTest.VERTX_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Logs as(String alias) {
        return new Logs(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Logs as(Name alias) {
        return new Logs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Logs rename(String name) {
        return new Logs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Logs rename(Name name) {
        return new Logs(name, null);
    }
}
